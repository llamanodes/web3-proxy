//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.5

use crate::serialization;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "pending_login")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u64,
    #[sea_orm(unique)]
    #[serde(serialize_with = "serialization::uuid_as_ulid")]
    pub nonce: Uuid,
    #[sea_orm(column_type = "Text")]
    pub message: String,
    pub expires_at: DateTimeUtc,
    pub imitating_user: Option<u64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
