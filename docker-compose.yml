---
# development config
version: "3.4"

services:
  # manage the databases with a user friendly interface
  # it is slightly dangerous with "drop all" as a single click
  dev-adminer:
    image: adminer
    ports:
      - 18306:8080
    environment:
      ADMINER_DEFAULT_SERVER: dev-db

  # in dev we use mysql, but production will use RDS or similar
  dev-db:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: dev_web3_proxy
      MYSQL_DATABASE: dev_web3_proxy
    ports:
      - 127.0.0.1:13306:3306
    volumes:
      - ./data/dev_mysql:/var/lib/mysql

  # influxdb for stats
  dev-influxdb:
    image: influxdb:2.6.1-alpine
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: dev_web3_proxy
      DOCKER_INFLUXDB_INIT_PASSWORD: dev_web3_proxy
      DOCKER_INFLUXDB_INIT_ORG: dev_org
      DOCKER_INFLUXDB_INIT_BUCKET: dev_web3_proxy
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: dev_web3_proxy_auth_token
    ports:
      - 127.0.0.1:18086:8086
    volumes:
      - ./data/dev_influxdb/data:/var/lib/influxdb2
      - ./data/dev_influxdb/config:/etc/influxdb2

  dev-kafka:
    image: bitnami/kafka:3.4
    ports:
      - "127.0.0.1:19092:9092"
    volumes:
      - "./data/dev_kafka:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=dev-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - dev-zookeeper

  # volatile redis for storing rate limits
  dev-vredis:
    extends:
      file: docker-compose.common.yml
      service: volatile_redis
    ports:
      - 127.0.0.1:16379:6379

  # TODO: kafka doesn't need zookeeper anymore, but all the docs still use it
  dev-zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "127.0.0.1:12181:2181"
    volumes:
      - "./data/zookeeper:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
